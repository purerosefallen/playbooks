---
  - hosts: services
    remote_user: root
    tasks:
      - name: directory
        file:
          path: '{{ service_path }}'
          state: directory
      - name: docker-compose file
        template:
          src: 'files/services/{{ service_name }}/docker-compose.yml.j2'
          dest: '{{ service_path }}/docker-compose.yml'
      - name: data
        become: true
        synchronize:
          src: 'files/services/{{ service_name }}/data/'
          dest: '{{ service_path }}/data'
          delete: yes
          copy_links: yes
          recursive: yes
          verify_host: no
          checksum: yes
          archive: no
          perms: yes
        notify: handle
      - name: templates directory
        file:
          path: '{{ service_path }}/templates'
          state: directory
      - name: templates
        become: true
        with_items: '{{ template_list }}'
        template:
          src: 'files/services/{{ service_name }}/templates/{{ item }}.j2'
          dest: '{{ service_path }}/templates/{{ item }}'
          owner: '{{ ansible_user_id }}'
          group: '{{ ansible_user_id }}'
          follow: yes
        notify: handle
      - name: templates for frpc
        become: true
        with_items: '{{ frpc_instances }}'
        template:
          src: 'files/services/{{ service_name }}/templates/frpc.ini.j2'
          dest: '{{ service_path }}/templates/frpc_{{ item.name }}.ini'
          owner: '{{ ansible_user_id }}'
          group: '{{ ansible_user_id }}'
          follow: yes
        when: service_name == "frpc"
        notify: handle_frpc
      - name: docker-compose up -d
        docker_compose:
          project_src: '{{ service_path }}'
          remove_orphans: true
          build: '{{build}}'
          pull: '{{pull}}'
    handlers:
      - name: handle
        include_tasks: 'handlers/docker.yaml'
        vars:
          handler: 
            type: docker
            path: '{{ service_path }}'
            services: '{{ handle_services }}'
        when: handle_services
      - name: handle_frpc
        include_tasks: 'handlers/docker.yaml'
        vars:
          handler: 
            type: docker
            path: '{{ service_path }}'
            services:
              - '{{ item.name }}'
        with_items: '{{ frpc_instances }}'
        when: service_name == "frpc"
