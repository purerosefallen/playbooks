---
- hosts: srvpro_install
  remote_user: root
  #vars:
  #  home_path: ~
  #  fork: mycard
  tasks:
    - name: curl
      become: yes
      apt:
        update_cache: true
        state: latest
        name: curl,apt-transport-https
      when: "ansible_distribution != 'CentOS'"
    - name: node source
      become: yes
      shell: 'curl -sL https://deb.nodesource.com/setup_12.x | bash -'
      when: "(ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int < 18) or (ansible_distribution == 'Debian' and ansible_distribution_major_version|int < 9)"
    - name: apt
      become: yes
      apt:
        #update_cache: true
        state: latest
        name: wget,git,build-essential,libreadline-dev,libsqlite3-dev,libevent-dev,mono-complete,redis-server,p7zip-full
      when: "ansible_distribution != 'CentOS'"
    - name: nodejs from nodesource
      become: yes
      apt:
        state: latest
        name: nodejs
      when: "(ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int < 18) or (ansible_distribution == 'Debian' and ansible_distribution_major_version|int < 9)"
    - name: nodejs from apt
      become: yes
      apt:
        state: latest
        name: npm
      when: "(ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int >= 18) or (ansible_distribution == 'Debian' and ansible_distribution_major_version|int >= 9)"
    - name: mono yum key
      become: yes
      rpm_key:
        key: 'http://pool.sks-keyservers.net/pks/lookup?op=get&search=0x3fa7e0328081bff6a14da29aa6a19b38d3d831ef'
      when: "ansible_distribution == 'CentOS'" 
    - name: mono yum source
      become: yes
      yum_repository:
        name: mono
        description: mono
        baseurl: 'https://download.mono-project.com/repo/centos{{ansible_distribution_major_version}}-stable/'
        ip_resolve: 4
        gpgkey: "https://download.mono-project.com/repo/xamarin.gpg"
      when: "ansible_distribution == 'CentOS'"
    - name: epel 7
      become: true
      yum:
        state: latest
        update_cache: true
        name: epel-release,curl
      when: "ansible_distribution == 'CentOS' and ansible_distribution_major_version|int <= 7"
    - name: node source
      become: true
      shell: 'curl -sL https://rpm.nodesource.com/setup_12.x | bash -'
      when: "ansible_distribution == 'CentOS' and ansible_distribution_major_version|int <= 7"
    - name: yum
      become: yes
      yum:
        state: latest
        update_cache: true
        name: wget,git,nodejs,gcc,gcc-c++,make,sqlite-devel,readline-devel,openssl-devel,libevent-devel,mono-complete,redis,p7zip,p7zip-plugins,tar,unzip
      when: "ansible_distribution == 'CentOS' and ansible_distribution_major_version|int <= 7"
    - name: epel 8
      become: true
      dnf:
        state: latest
        name: epel-release
      when: "ansible_distribution == 'CentOS' and ansible_distribution_major_version|int == 8"
    - name: dnf
      become: true
      dnf:
        state: latest
        name: curl,wget,git,nodejs,npm,gcc,gcc-c++,make,sqlite-devel,readline-devel,openssl-devel,libevent-devel,mono-complete,redis,p7zip,p7zip-plugins,tar,unzip
      when: "ansible_distribution == 'CentOS' and ansible_distribution_major_version|int == 8"
    - name: npm
      become: yes
      npm:
        name: 'n'
        state: latest
        global: true
    - name: nodejs version
      become: yes
      shell: n 12
    - name: npm
      become: yes
      npm:
        name: npm
        state: latest
        global: true
    - name: pm2
      become: yes
      npm:
        name: pm2
        state: latest
        global: true
    - name: ygopro
      git:
        repo: 'https://github.com/{{fork}}/ygopro'
        dest: '{{home_path}}/ygopro'
        version: server
        force: true
        accept_hostkey: true
        track_submodules: true
    - name: premake5
      unarchive:
        src: https://minio.mycard.moe:9000/nanahira/premake-5.0.0-alpha13-linux.tar.gz
        dest: '{{home_path}}/ygopro/'
        remote_src: yes
    - name: premake5 gmake
      shell: ./premake5 gmake
      args:
        chdir: '{{home_path}}/ygopro'
    - name: build
      make:
        chdir: '{{home_path}}/ygopro/build'
        target: config=release
    - name: strip ygopro
      shell: strip bin/release/ygopro
      args:
        chdir: '{{home_path}}/ygopro'
    - name: link ygopro
      file:
        state: link
        src: '{{home_path}}/ygopro/bin/release/ygopro'
        path: '{{home_path}}/ygopro/ygopro'
    - name: windbot
      git:
        repo: 'https://github.com/{{fork}}/windbot'
        dest: '{{home_path}}/windbot'
        version: master
        force: true
        accept_hostkey: true
        track_submodules: true
    - name: build windbot
      shell: xbuild /p:Configuration=Release /p:TargetFrameworkVersion=v4.5
      args:
        chdir: '{{home_path}}/windbot'
    - name: link windbot.exe
      file:
        state: link
        src: '{{home_path}}/windbot/bin/Release/WindBot.exe'
        path: '{{home_path}}/windbot/WindBot.exe'
    - name: link cards.cdb
      file:
        state: link
        src: '{{home_path}}/ygopro/cards.cdb'
        path: '{{home_path}}/windbot/cards.cdb'
    - name: srvpro
      git:
        repo: 'https://github.com/{{fork}}/srvpro'
        dest: '{{home_path}}/ygopro-server'
        version: master
        force: true
        accept_hostkey: true
        track_submodules: true
    - name: fixup npm
      become: true
      file:
        path: ~/.npm
        owner: '{{ansible_user_id}}'
        recurse: true
      when: "ansible_user_id != 'root'"
    - name: srvpro npm
      npm:
        path: '{{home_path}}/ygopro-server'
    - name: link ygopro repo
      file:
        state: link
        src: '{{home_path}}/ygopro'
        path: '{{home_path}}/ygopro-server/ygopro'
    - name: link windbot repo
      file:
        state: link
        src: '{{home_path}}/windbot'
        path: '{{home_path}}/ygopro-server/windbot'
    - name: stop firewalld
      become: true
      systemd:
        name: firewalld
        state: stopped
      when: "ansible_distribution == 'CentOS'" 
    - name: redis
      become: true
      systemd:
        name: redis
        state: started
